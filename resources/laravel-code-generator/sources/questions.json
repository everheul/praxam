{
    "fields": [
        {
            "name": "id",
            "labels": "Index",
            "html-type": "number",
            "is-on-index": false,
            "is-on-show": true,
            "is-on-form": false,
            "data-type": "int",
            "is-primary": true,
            "is-unsigned": true,
            "is-auto-increment": true,
            "placeholder": "Enter id here..."
        },
        {
            "name": "scene_id",
            "labels": "Scene",
            "html-type": "select",
            "validation": "nullable",
            "is-on-index": false,
            "is-on-show": true,
            "is-on-form": true,
            "data-type": "int",
            "data-value": "0",
            "is-nullable": true,
            "is-unsigned": true,
            "placeholder": "Select scene",
            "foreign-relation": {
                "name": "scene",
                "type": "belongsTo",
                "params": [
                    "App\\Models\\Scene",
                    "scene_id"
                ],
                "field": "head"
            }
        },
        {
            "name": "question_type_id",
            "labels": "Question Type",
            "html-type": "select",
            "validation": "nullable",
            "is-on-index": true,
            "is-on-show": true,
            "is-on-form": true,
            "data-type": "int",
            "data-value": "0",
            "is-nullable": true,
            "is-unsigned": true,
            "placeholder": "Select question type",
            "foreign-relation": {
                "name": "questionType",
                "type": "belongsTo",
                "params": [
                    "App\\Models\\QuestionType",
                    "question_type_id"
                ],
                "field": "name"
            }
        },
        {
            "name": "order",
            "labels": "Order",
            "validation": "required",
            "is-on-index": true,
            "is-on-show": true,
            "is-on-form": true,
            "data-type": "smallInteger",
            "data-value": "0",
            "comment": "if more questions per scene",
            "is-unsigned": true,
            "placeholder": "Enter order here..."
        },
        {
            "name": "head",
            "labels": "Head",
            "validation": "nullable|string|min:0|max:191",
            "is-on-index": true,
            "is-on-show": true,
            "is-on-form": true,
            "data-type": "string",
            "data-type-params": [
                191
            ],
            "is-nullable": true,
            "placeholder": "Enter head here..."
        },
        {
            "name": "text",
            "labels": "Text",
            "validation": "nullable|string|min:0|max:5000",
            "is-on-index": false,
            "is-on-show": true,
            "is-on-form": true,
            "data-type": "textarea",
            "data-type-params": [
                5000
            ],
            "is-nullable": true,
            "placeholder": "Enter text here..."
        },
        {
            "name": "explanation",
            "labels": "Explanation",
            "validation": "nullable|string|min:0|max:5000",
            "is-on-index": false,
            "is-on-show": true,
            "is-on-form": true,
            "data-type": "textarea",
            "data-type-params": [
                5000
            ],
            "is-nullable": true,
            "placeholder": "Enter explanation here..."
        },
        {
            "name": "points",
            "labels": "Points",
            "validation": "nullable",
            "is-on-index": false,
            "is-on-show": true,
            "is-on-form": true,
            "data-type": "smallInteger",
            "data-value": "0",
            "is-nullable": true,
            "placeholder": "Enter points here..."
        },
        {
            "name": "answer_count",
            "labels": "Answer Count",
            "validation": "nullable|numeric|min:0",
            "is-on-index": false,
            "is-on-show": true,
            "is-on-form": true,
            "data-type": "tinyInteger",
            "data-value": "0",
            "is-nullable": true,
            "is-unsigned": true,
            "placeholder": "Enter answer count here..."
        }
    ],
    "relations": [],
    "indexes": [],
    "auto-manage-created-and-updated-at": false,
    "table-name": "questions",
    "protection": {
        "is-model-protected": false,
        "is-controller-protected": false,
        "is-api-resource-protected": false,
        "is-api-resource-collection-protected": false,
        "is-api-documentation-protected": false,
        "is-api-documentation-controller-protected": false,
        "is-form-request-protected": false,
        "is-languages-protected": false,
        "is-form-view-protected": false,
        "is-index-view-protected": false,
        "is-create-view-protected": false,
        "is-edit-view-protected": false,
        "is-show-view-protected": false
    },
    "api-documentation": {
        "access_token_with_bearer": "The access token prefixed with the \"Bearer \" key word.",
        "index_route_description": "Retrieve existing questions.",
        "index_route_response_description": "The API's response will be JSON based data. The JSON object will be structured as follow",
        "the_key_is_the_model_property_and_the_value_is_the_model_value": "The array's key is the question property name where the value is the assigned value to the retrieved question.",
        "link_to_retrieve_first_page": "Link to retrieve first page.",
        "link_to_retrieve_last_page": "Link to retrieve last page.",
        "link_to_retrieve_previous_page": "Link to retrieve previous page.",
        "link_to_retrieve_next_page": "Link to retrieve next page.",
        "the_number_of_current_page": "The number of current page.",
        "the_index_of_the_first_retrieved_item": "The index of first retrieved question.",
        "the_number_of_the_last_page": "The number of the last page.",
        "the_base_link_to_the_resource": "The base link to the api resource.",
        "the_number_of_models_per_page": "The number of questions per page.",
        "the_index_of_the_last_retrieved_item": "The index of last retrieved question.",
        "the_total_of_available_pages": "The total of the available pages.",
        "store_route_description": "Create new question.",
        "store_route_response_description": "The API's response will be JSON based data. The JSON object will be structured as follow",
        "update_route_description": "Update existsing question.",
        "update_route_response_description": "The API's response will be JSON based data. The JSON object will be structured as follow",
        "show_route_description": "Retrieve existsing question.",
        "show_route_response_description": "The API's response will be JSON based data. The JSON object will be structured as follow",
        "the_id_of_model_to_retrieve": "The unique id of the question to retrieve",
        "destroy_route_description": "Delete existsing question.",
        "destroy_route_response_description": "The API's response will be JSON based data. The JSON object will be structured as follow",
        "the_id_of_model_to_delete": "The id of the question to delete.",
        "general_description": "Allows you to list, create, edit, show and delete questions.",
        "indicate_whether_the_request_was_successful_or_not": "Indicate whether the request was successful or not.",
        "the_id_of_the_model": "The id of the question.",
        "this_parameter_must_be_present_in_the_request": "This parameter must be present in the request.",
        "the_request_failed_validation": "The request failed validation.",
        "list_of_the_invalid_errors": "List of the invalid errors.",
        "the_requested_model_does_not_exists": "The requested question does not exists.",
        "the_user_does_not_have_permission_to_access_the_requested_resource": "User does not have permission to access the requested resource."
    }
}